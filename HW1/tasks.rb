# frozen_string_literal: true

# p 'Дан целочисленный массив. Найти количество четных элементов.'
# p "[1,2,3].some_method"
# p [1,2,3].some_method
# p '--------------'
#
# 1. строка с заданием
# 2.строка с условием (чтобы мы могли понять исходные данные)
# 3.строка вывода результата решения
# 4.разделительная строка для задач

puts '1.Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными.'
puts 'mas = [ "a", "b", "c","d","2","3","4","5" ]'
mas1 = %w[a b c d 2 3 4 5]
mas1.each_index { |x| print mas1[x] if x.even? }
mas1.each_index { |x| print mas1[x] if x.odd? }
puts ''
puts '--------------------------------------------------------'

puts '2.Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными.'
puts 'mas = [ "a", "b", "c","d","2","3","4","5" ]'
mas2 = %w[a b c d 2 3 4 5]
mas2.each_index { |x| print mas2[x] if x.odd? }
mas2.each_index { |x| print mas2[x] if x.even? }
puts ''
puts '--------------------------------------------------------'

puts '3.Дан целочисленный массив. Вывести номер первого из тех его элементов,
#которые удовлетворяют двойному неравенству: A[0] < A[i] < A[-1].
#Если таких элементов нет, то вывести [ ].'
puts "mas3 = ['2', '8', '5', '5', '8']"

mas3 = ['2', '8', '5', '5', '8']

def task3(arr)
  a = arr[0]
  b = arr[-1]
  f = 0
  arr.length.times do |i|
    x = arr[i]
    if a < x && x < b
      puts arr.index(x)
      f = f+1
      break
    end
  end
  print "[]" if f.zero?
end
task3(mas3)

