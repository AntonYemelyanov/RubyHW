=begin
Задание 1. Есть массив [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336] , сохранить массив в переменную и проделать с ней следующее (должен выводиться результат, но саму переменную не менять):







– необходимо найти три наименьших элемента.

    В том же репозитории, что и в первой домашке (RubyHW) создать папку HW2
Первое задание поместить в файл task1.rb. Первой строкой должно идти присвоение массива выше к переменной array.
Каждая новая операция с новой строки.

Опционально попробуйте сделать все задачки в одну строку.
=end
array = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202,
       574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p 'узнать количество элементов в массиве;'
p array.length
p 'перевернуть массив;'
p array.reverse
p 'найти наибольшее число;'
p array.max
p 'найти наименьшее число;'
p array.min
p 'отсортировать от меньшего к большему;'
p array.sort
p 'отсортировать от большего к меньшему;'
p(array.sort { |a, b| b <=> a })
p 'удалить все нечетные числа;'
p array.select(&:even?)
p 'оставить только те числа, которые без остатка делятся на 3;'
p(array.select { |x| (x % 3).zero? })
p 'удалить из массива числа, которые повторяются (то есть, нужно вывести массив, в котором нет повторов);'
p array.uniq
p 'разделить каждый элемент на 10, в результате элементы не должны быть округлены до целого;'
p(array.map { |x| x / 10.0 })
p 'получить новый массив, который бы содержал в себе те буквы английского алфавита, порядковый номер которых есть в нашем массиве;'
arr_abc = [nil] + ('a'..'z').to_a
arr_pre_abc = array.select { |v| v < arr_abc.length }
arr_out = []
arr_pre_abc.each { |v| arr_out << arr_abc[v] }
p arr_out
p 'поменять местами минимальный и максимальный элементы массива;'
min_val_ind = array.index(array.min)
max_val_ind = array.index(array.max)
arr_new = array.dup
arr_new[min_val_ind] = array[max_val_ind]
arr_new[max_val_ind] = array[min_val_ind]
p arr_new
p 'найти элементы, которые находятся перед минимальным числом в массиве;'
