=begin
Задание 2. Тамагочи (те, кому за 30, вспомнят:D)
Необходимо написать программу-тамагочи.
Вы должны создать класс Pet. У каждого питомца должно быть имя, задаваемое при создании. Должно быть название животного
(Собачка, Кошка, Попугай или ...), жизни, настроение, показатель голода, сна, настроения + два показателя на своё
усмотрение. Должен быть закрытый метод (под private), который бы эмулировал прохождение 1 дня
(или часа, или нескольких часов), когда бы некоторые показатели менялись, — например питомец становился более голодным,
менее выспавшемся (на случайную величину в пределах заданных) и т.д.
Должно быть 10-20 методов, которые позволяли бы совершать с животным определенные действия, например, "покормить",
 "положить спать", "поиграть". Каждое из 	этих действий должно менять один или несколько показателей животного, а так
же вызывать закрытый метод прохождения времени. Например, мы можем покормить нашего питомца, но при этом пройдет
определенное кол-во времени. Должен быть метод, позволяющий просто понаблюдать за питомцев, — в это время может
произойти какое то случайное событие. При неправильном уходе питомец может умереть, разозлиться и съесть вас
(если оно плотоядное) или убежать.
Необходимо создать простенькую менюшку, чтобы с питомцем можно было поиграть с консоли. Также должен быть метод help,
который бы позволял вывести все команды для питомца и описания к ним. В общем, нужно придумать хороший UX.

* простой пример питомца-Дракона: https://www.opennet.ru/docs/RUS/ruby_learn/Chapter09.html (дочитайте эту книгу до конца) ;
для создания меню можно использовать until command == 'exit' … end и case с командами для питомца внутри;

В папочку с проектом положите файл readme.md, где напишите инструкцию по запуску вашей программы.
Познакомьтесь с синтаксисом md.
Приветствуется любая творческая реализация удовлетворяющая условиям задачи.
=end

class Pet

  def initialize(name, type)
    @pet_name = name
    @pet_type = type
    @hunger_lvl = 10
    @sleep_lvl = 10
    @mood_lvl = 10
    @life = 3
  end

  def feed
    if @hunger_lvl < 5
      @hunger_lvl += 10
      puts 'yam-yam-yam'
    else
      puts 'i am not hungry'
    end
  end

  def put_to_sleep
    if @sleep_lvl < 3
      @sleep_lvl += 10
      puts 'hrrrr-pssss-hrrrrrr-psssss'
    else
      puts 'I dont want to sleep'
    end
  end

  def play_a_game

    loop do
      puts 'Загадай число от 1 до 10'
      sleep(1)
      puts 'И я загадал своё число от 1 до 10'
      sleep(1)
      puts 'Напиши своё число'
      game_input = gets.chomp
      if game_input.to_i == 10
        puts 'Я тоже загадал 10'
      elsif game_input == 'закончить'
        puts 'игра окончена'
        break
      elsif game_input.to_i.zero?
        puts 'Хозяин, не балуйся!'
      elsif game_input.to_i > 10
        puts 'Твоё число больше 10. Будь внимателен!'
      else
        x = game_input.to_i + 1
        puts "А я загадал #{x}"
        sleep(1)
        puts 'бе-бе-бе я выиграл'
        sleep(1)
      end
    end
  end

end


# cat.play_a_game

def help
  puts "Поддерживаемые команды: 'создать' "
end

p "Вас приветствует программа Тамагочи. Чтоб вызвать справку наберите 'help'"


loop do
  prog_input = gets.chomp
  case prog_input
  when 'help'
    help
  when 'создать'
    cat = Pet.new('Acjka', 'cat')
  when 'привет'
    puts 'хэллоу'
  when 'каконо?', 'как оно?', 'как дела?', 'как делы?', 'как дела', 'какдела'
    puts 'нормально, а у тебя как?'
  when 'играть', 'поиграть', 'игра'
    cat.play_a_game
  when 'харэ','закончить'
    break
  else
    puts 'Не распознанный ввод'
end

end

